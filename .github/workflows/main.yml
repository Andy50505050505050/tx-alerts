name: Transaction Alerts

on:
  workflow_dispatch:
  schedule:
    - cron: '*/5 * * * *' # Runs every 5 minutes

jobs:
  transaction_alerts:
    runs-on: ubuntu-latest
    steps:
      - name: Send the last 10 transactions to Telegram
        run: |
          # Set up environment variables
          export API_KEY="J7ZWATDNC5H2JPCRU6AGVX7VHXUESWWSX5"
          export TOKEN_ADDRESS="0xAd52f33f9Fc4DE396f2e8236438e9c590680b54b"
          export BOT_TOKEN="${{ secrets.TELEGRAMBOTTOKEN }}"
          export CHAT_ID="-1002455751644"

          # Fetch the last transactions from the API
          RESPONSE=$(curl -s "https://api.bscscan.com/api?module=account&action=txlist&address=$TOKEN_ADDRESS&startblock=0&endblock=latest&sort=desc&apikey=$API_KEY")
          
          # Validate the response
          if echo "$RESPONSE" | jq -e .status > /dev/null 2>&1 && [ "$(echo "$RESPONSE" | jq -r .status)" = "1" ]; then
            # Initialize the message
            MESSAGE="ðŸš€ *Latest 10 Transactions* ðŸš€\n\n"
            
            # Loop through the last 10 transactions
            for i in $(seq 0 9); do
              TX_HASH=$(echo "$RESPONSE" | jq -r ".result[$i].hash")
              TX_TIMESTAMP=$(echo "$RESPONSE" | jq -r ".result[$i].timeStamp")
              TX_VALUE=$(echo "$RESPONSE" | jq -r ".result[$i].value")
              TX_AMOUNT=$(echo "scale=4; $TX_VALUE / 10^18" | bc)

              # Add transaction details to the message
              MESSAGE="${MESSAGE}*Date & Time*: $(date -d @$TX_TIMESTAMP)\n"
              MESSAGE="${MESSAGE}*Amount*: ${TX_AMOUNT} BNB\n"
              MESSAGE="${MESSAGE}*Transaction ID*: [${TX_HASH}](https://bscscan.com/tx/${TX_HASH})\n\n"
            done

            # Send the message to Telegram
            curl -s -X POST "https://api.telegram.org/bot$BOT_TOKEN/sendMessage" \
              -d "chat_id=$CHAT_ID" \
              -d "parse_mode=Markdown" \
              -d "text=$MESSAGE"
          else
            echo "No valid transactions found or an error occurred: $RESPONSE"
          fi
